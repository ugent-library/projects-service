// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "gismo_id", Type: field.TypeString, Unique: true},
		{Name: "identifier", Type: field.TypeJSON},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "founding_date", Type: field.TypeString, Nullable: true},
		{Name: "dissolution_date", Type: field.TypeString, Nullable: true},
		{Name: "acronym", Type: field.TypeString, Nullable: true},
		{Name: "grant_id", Type: field.TypeString, Nullable: true},
		{Name: "funding_programme", Type: field.TypeString, Nullable: true},
		{Name: "created", Type: field.TypeTime},
		{Name: "modified", Type: field.TypeTime},
		{Name: "ts", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"postgres": "tsvector NULL GENERATED ALWAYS AS(to_tsvector('simple', jsonb_path_query_array(identifier,'$.**{2}')) || to_tsvector('simple', id) || to_tsvector('usimple',name)) STORED"}},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "project_ts",
				Unique:  false,
				Columns: []*schema.Column{ProjectsColumns[12]},
				Annotation: &entsql.IndexAnnotation{
					Type: "GIN",
				},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ProjectsTable,
	}
)

func init() {
}
