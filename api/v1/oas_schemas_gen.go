// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// AddProjectOK is response for AddProject operation.
type AddProjectOK struct{}

type ApiKey struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ApiKey) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ApiKey) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    int64  `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() int64 {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val int64) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #/components/schemas/GetProjectRequest
type GetProjectRequest struct {
	ID string `json:"id"`
}

// GetID returns the value of ID.
func (s *GetProjectRequest) GetID() string {
	return s.ID
}

// SetID sets the value of ID.
func (s *GetProjectRequest) SetID(val string) {
	s.ID = val
}

// NewNilProjectIsFundedBy returns new NilProjectIsFundedBy with value set to v.
func NewNilProjectIsFundedBy(v ProjectIsFundedBy) NilProjectIsFundedBy {
	return NilProjectIsFundedBy{
		Value: v,
	}
}

// NilProjectIsFundedBy is nullable ProjectIsFundedBy.
type NilProjectIsFundedBy struct {
	Value ProjectIsFundedBy
	Null  bool
}

// SetTo sets value to v.
func (o *NilProjectIsFundedBy) SetTo(v ProjectIsFundedBy) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilProjectIsFundedBy) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilProjectIsFundedBy) SetToNull() {
	o.Null = true
	var v ProjectIsFundedBy
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilProjectIsFundedBy) Get() (v ProjectIsFundedBy, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilProjectIsFundedBy) Or(d ProjectIsFundedBy) ProjectIsFundedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilProjectIsFundedByIsAwardedBy returns new NilProjectIsFundedByIsAwardedBy with value set to v.
func NewNilProjectIsFundedByIsAwardedBy(v ProjectIsFundedByIsAwardedBy) NilProjectIsFundedByIsAwardedBy {
	return NilProjectIsFundedByIsAwardedBy{
		Value: v,
	}
}

// NilProjectIsFundedByIsAwardedBy is nullable ProjectIsFundedByIsAwardedBy.
type NilProjectIsFundedByIsAwardedBy struct {
	Value ProjectIsFundedByIsAwardedBy
	Null  bool
}

// SetTo sets value to v.
func (o *NilProjectIsFundedByIsAwardedBy) SetTo(v ProjectIsFundedByIsAwardedBy) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilProjectIsFundedByIsAwardedBy) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilProjectIsFundedByIsAwardedBy) SetToNull() {
	o.Null = true
	var v ProjectIsFundedByIsAwardedBy
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilProjectIsFundedByIsAwardedBy) Get() (v ProjectIsFundedByIsAwardedBy, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilProjectIsFundedByIsAwardedBy) Or(d ProjectIsFundedByIsAwardedBy) ProjectIsFundedByIsAwardedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Project
type Project struct {
	ID              OptString               `json:"id"`
	Created         OptDateTime             `json:"created"`
	Modified        OptDateTime             `json:"modified"`
	Type            string                  `json:"type"`
	Identifier      []ProjectIdentifierItem `json:"identifier"`
	IsFundedBy      NilProjectIsFundedBy    `json:"isFundedBy"`
	HasAcronym      NilString               `json:"hasAcronym"`
	Name            NilString               `json:"name"`
	Description     NilString               `json:"description"`
	FoundingDate    NilString               `json:"foundingDate"`
	DissolutionDate NilString               `json:"dissolutionDate"`
}

// GetID returns the value of ID.
func (s *Project) GetID() OptString {
	return s.ID
}

// GetCreated returns the value of Created.
func (s *Project) GetCreated() OptDateTime {
	return s.Created
}

// GetModified returns the value of Modified.
func (s *Project) GetModified() OptDateTime {
	return s.Modified
}

// GetType returns the value of Type.
func (s *Project) GetType() string {
	return s.Type
}

// GetIdentifier returns the value of Identifier.
func (s *Project) GetIdentifier() []ProjectIdentifierItem {
	return s.Identifier
}

// GetIsFundedBy returns the value of IsFundedBy.
func (s *Project) GetIsFundedBy() NilProjectIsFundedBy {
	return s.IsFundedBy
}

// GetHasAcronym returns the value of HasAcronym.
func (s *Project) GetHasAcronym() NilString {
	return s.HasAcronym
}

// GetName returns the value of Name.
func (s *Project) GetName() NilString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Project) GetDescription() NilString {
	return s.Description
}

// GetFoundingDate returns the value of FoundingDate.
func (s *Project) GetFoundingDate() NilString {
	return s.FoundingDate
}

// GetDissolutionDate returns the value of DissolutionDate.
func (s *Project) GetDissolutionDate() NilString {
	return s.DissolutionDate
}

// SetID sets the value of ID.
func (s *Project) SetID(val OptString) {
	s.ID = val
}

// SetCreated sets the value of Created.
func (s *Project) SetCreated(val OptDateTime) {
	s.Created = val
}

// SetModified sets the value of Modified.
func (s *Project) SetModified(val OptDateTime) {
	s.Modified = val
}

// SetType sets the value of Type.
func (s *Project) SetType(val string) {
	s.Type = val
}

// SetIdentifier sets the value of Identifier.
func (s *Project) SetIdentifier(val []ProjectIdentifierItem) {
	s.Identifier = val
}

// SetIsFundedBy sets the value of IsFundedBy.
func (s *Project) SetIsFundedBy(val NilProjectIsFundedBy) {
	s.IsFundedBy = val
}

// SetHasAcronym sets the value of HasAcronym.
func (s *Project) SetHasAcronym(val NilString) {
	s.HasAcronym = val
}

// SetName sets the value of Name.
func (s *Project) SetName(val NilString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Project) SetDescription(val NilString) {
	s.Description = val
}

// SetFoundingDate sets the value of FoundingDate.
func (s *Project) SetFoundingDate(val NilString) {
	s.FoundingDate = val
}

// SetDissolutionDate sets the value of DissolutionDate.
func (s *Project) SetDissolutionDate(val NilString) {
	s.DissolutionDate = val
}

type ProjectIdentifierItem struct {
	Type       string `json:"type"`
	PropertyID string `json:"propertyID"`
	Value      string `json:"value"`
}

// GetType returns the value of Type.
func (s *ProjectIdentifierItem) GetType() string {
	return s.Type
}

// GetPropertyID returns the value of PropertyID.
func (s *ProjectIdentifierItem) GetPropertyID() string {
	return s.PropertyID
}

// GetValue returns the value of Value.
func (s *ProjectIdentifierItem) GetValue() string {
	return s.Value
}

// SetType sets the value of Type.
func (s *ProjectIdentifierItem) SetType(val string) {
	s.Type = val
}

// SetPropertyID sets the value of PropertyID.
func (s *ProjectIdentifierItem) SetPropertyID(val string) {
	s.PropertyID = val
}

// SetValue sets the value of Value.
func (s *ProjectIdentifierItem) SetValue(val string) {
	s.Value = val
}

type ProjectIsFundedBy struct {
	Type        string                          `json:"type"`
	Identifier  string                          `json:"identifier"`
	IsAwardedBy NilProjectIsFundedByIsAwardedBy `json:"isAwardedBy"`
}

// GetType returns the value of Type.
func (s *ProjectIsFundedBy) GetType() string {
	return s.Type
}

// GetIdentifier returns the value of Identifier.
func (s *ProjectIsFundedBy) GetIdentifier() string {
	return s.Identifier
}

// GetIsAwardedBy returns the value of IsAwardedBy.
func (s *ProjectIsFundedBy) GetIsAwardedBy() NilProjectIsFundedByIsAwardedBy {
	return s.IsAwardedBy
}

// SetType sets the value of Type.
func (s *ProjectIsFundedBy) SetType(val string) {
	s.Type = val
}

// SetIdentifier sets the value of Identifier.
func (s *ProjectIsFundedBy) SetIdentifier(val string) {
	s.Identifier = val
}

// SetIsAwardedBy sets the value of IsAwardedBy.
func (s *ProjectIsFundedBy) SetIsAwardedBy(val NilProjectIsFundedByIsAwardedBy) {
	s.IsAwardedBy = val
}

type ProjectIsFundedByIsAwardedBy struct {
	Type string `json:"type"`
	Name string `json:"name"`
}

// GetType returns the value of Type.
func (s *ProjectIsFundedByIsAwardedBy) GetType() string {
	return s.Type
}

// GetName returns the value of Name.
func (s *ProjectIsFundedByIsAwardedBy) GetName() string {
	return s.Name
}

// SetType sets the value of Type.
func (s *ProjectIsFundedByIsAwardedBy) SetType(val string) {
	s.Type = val
}

// SetName sets the value of Name.
func (s *ProjectIsFundedByIsAwardedBy) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/SuggestProjectsRequest
type SuggestProjectsRequest struct {
	Query string `json:"query"`
}

// GetQuery returns the value of Query.
func (s *SuggestProjectsRequest) GetQuery() string {
	return s.Query
}

// SetQuery sets the value of Query.
func (s *SuggestProjectsRequest) SetQuery(val string) {
	s.Query = val
}

// Ref: #/components/schemas/SuggestProjectsResponse
type SuggestProjectsResponse struct {
	Cursor OptString `json:"cursor"`
	Data   []Project `json:"data"`
}

// GetCursor returns the value of Cursor.
func (s *SuggestProjectsResponse) GetCursor() OptString {
	return s.Cursor
}

// GetData returns the value of Data.
func (s *SuggestProjectsResponse) GetData() []Project {
	return s.Data
}

// SetCursor sets the value of Cursor.
func (s *SuggestProjectsResponse) SetCursor(val OptString) {
	s.Cursor = val
}

// SetData sets the value of Data.
func (s *SuggestProjectsResponse) SetData(val []Project) {
	s.Data = val
}
